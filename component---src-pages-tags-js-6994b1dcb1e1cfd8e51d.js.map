{"version":3,"sources":["webpack:///./src/components/Tag/index.js","webpack:///./src/pages/tags.js"],"names":["Tag","name","count","href","className","defaultProps","TagPage","allMarkdownRemark","data","mapping","edges","forEach","node","frontmatter","tags","Array","from","Object","keys","sort","b","a","style","margin","map","item","key"],"mappings":"2FAAA,yBAGMA,EAAM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACV,uBAAGC,KAAI,QAAUF,EAAQG,UAAU,cAChCH,EADH,IAGGC,IASLF,EAAIK,aAAe,CACjBH,MAAO,IAGMF,O,sJC2BAM,UAnCC,SAAC,GAAc,IACrBC,EADoB,EAAXC,KACTD,kBAEFE,EAAU,GAEhBF,EAAkBG,MAAMC,SAAQ,YAAc,EAAXC,KACXC,YAAdC,KACHH,SAAQ,SAACV,GACRQ,EAAQR,GACVQ,EAAQR,IAAS,EAEjBQ,EAAQR,GAAQ,QAKtB,IAAMa,EAAOC,MAAMC,KAAKC,OAAOC,KAAKT,IAAUU,MAC5C,SAACC,EAAGC,GAAJ,OAAUZ,EAAQY,GAAKZ,EAAQW,MAGjC,OACE,yBAAKhB,UAAU,eAAekB,MAAO,CAAEC,OAAQ,KAC7C,kBAAC,IAAD,MACA,yBAAKnB,UAAU,0DACb,yBAAKA,UAAU,OACZU,EAAKU,KAAI,SAAAC,GAAI,OACZ,kBAAC,IAAD,CAAKxB,KAAMwB,EAAMC,IAAKD,EAAMvB,MAAOO,EAAQgB,UAIjD,yBAAKrB,UAAU","file":"component---src-pages-tags-js-6994b1dcb1e1cfd8e51d.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tag = ({ name, count }) => (\n  <a href={`/tag/${name}`} className=\"header-tag\">\n    {name}\n    &nbsp;\n    {count}\n  </a>\n);\n\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nTag.defaultProps = {\n  count: '',\n};\n\nexport default Tag;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Sidebar from '../components/Sidebar';\nimport Tag from '../components/Tag';\nimport SEO from '../components/SEO';\nimport Header from '../components/Header';\nimport { parseChineseDate } from '../api';\nimport Content from '../components/Content';\nimport ShareBox from '../components/ShareBox';\n\n// eslint-disable-next-line react/prop-types\nconst TagPage = ({ data }) => {\n  const { allMarkdownRemark } = data;\n\n  const mapping = {};\n\n  allMarkdownRemark.edges.forEach(({ node }) => {\n    const { tags } = node.frontmatter;\n    tags.forEach((name) => {\n      if (mapping[name]) {\n        mapping[name] += 1;\n      } else {\n        mapping[name] = 1;\n      }\n    });\n  });\n\n  const tags = Array.from(Object.keys(mapping)).sort(\n    (b, a) => mapping[a] - mapping[b],\n  );\n\n  return (\n    <div className=\"row homepage\" style={{ margin: 20 }}>\n      <Sidebar />\n      <div className=\"col-xl-7 col-lg-6 col-md-12 col-sm-12 order-10 content\">\n        <div className=\"col\">\n          {tags.map(item => (\n            <Tag name={item} key={item} count={mapping[item]} />\n          ))}\n        </div>\n      </div>\n      <div className=\"col col-xl-1 col-lg-2 order-10\" />\n    </div>\n  );\n};\n\nexport default TagPage;\n\nexport const pageQuery = graphql`\n  query getAllTags {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}